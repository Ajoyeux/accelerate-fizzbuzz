name: Build and Deploy

on:
    push:
        branches:
            - NAME_OF_ALL_BRANCHES

permissions:
    id-token: write
    contents: read

concurrency:
    group: ${{ github.ref_name }}_environment
    cancel-in-progress: true

jobs:
    unit-test:
        runs-on: ubuntu-latest
        name: Pass unit tests
        steps:
            - uses: actions/checkout@v4
            - uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{secrets.CLIENTELING_COMMONS_SSH_KEY}}
            - uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Run tests
              run: npm test -- run --coverage
            - name: run integrations tests
              run: npm run test:integration
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    build-and-deploy:
        runs-on: ubuntu-latest
        name: Build and deploy on ${{ github.ref_name }}
        environment: ${{ github.ref_name }}
        needs: unit-test
        steps:
            - uses: actions/checkout@v4
            - uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{secrets.CLIENTELING_COMMONS_SSH_KEY}}
            - uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci --omit=dev
            - name: Build
              run: npm run build
            - name: Docker Registry Login
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.AZURE_REGISTRY_USERNAME}}
                  password: ${{secrets.AZURE_REGISTRY_PASSWORD}}
                  registry: ${{secrets.AZURE_REGISTRY_URL}}
            - name: Docker Build
              run: docker build -t ${{secrets.AZURE_REGISTRY_URL}}/[SERVICE_NAME_IN_AZURE]:${{ github.sha }} .
            - name: Docker Push
              run: docker push ${{secrets.AZURE_REGISTRY_URL}}/[SERVICE_NAME_IN_AZURE]:${{ github.sha }}
            - name: Azure Login
              uses: Azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Update container app
              uses: azure/container-apps-deploy-action@v2
              with:
                  containerAppName: [SERVICE_NAME_IN_AZURE]
                  resourceGroup: clienteling-${{ github.ref_name }}
                  imageToDeploy: ${{secrets.AZURE_REGISTRY_URL}}/[SERVICE_NAME_IN_AZURE]:${{ github.sha }}
